[{"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\index.js":"1","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\App.js":"2","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\context\\context.js":"3","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\styles.js":"4","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\context\\contextReducer.js":"5","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\index.js":"6","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\InfoCard.jsx":"7","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\Main.jsx":"8","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Snackbar\\Snackbar.jsx":"9","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Details\\Details.jsx":"10","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Snackbar\\styles.js":"11","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\useTransactions.js":"12","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Details\\styles.js":"13","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\List\\List.jsx":"14","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\constants\\categories.js":"15","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\List\\styles.js":"16","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\styles.js":"17","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\Form\\Form.jsx":"18","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\Form\\styles.js":"19","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\utils\\formatDate.js":"20","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\context\\userContext.js":"21","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\config\\firebase.js":"22"},{"size":818,"mtime":1691583086555,"results":"23","hashOfConfig":"24"},{"size":3750,"mtime":1691947088088,"results":"25","hashOfConfig":"24"},{"size":4112,"mtime":1691496305673,"results":"26","hashOfConfig":"24"},{"size":1018,"mtime":1691584561336,"results":"27","hashOfConfig":"24"},{"size":583,"mtime":1691405917348,"results":"28","hashOfConfig":"24"},{"size":216,"mtime":1691405917347,"results":"29","hashOfConfig":"24"},{"size":460,"mtime":1691405917344,"results":"30","hashOfConfig":"24"},{"size":1257,"mtime":1691494070400,"results":"31","hashOfConfig":"24"},{"size":797,"mtime":1691405917347,"results":"32","hashOfConfig":"24"},{"size":1001,"mtime":1691582617063,"results":"33","hashOfConfig":"24"},{"size":206,"mtime":1691405917347,"results":"34","hashOfConfig":"24"},{"size":1124,"mtime":1691405917349,"results":"35","hashOfConfig":"24"},{"size":560,"mtime":1691947085153,"results":"36","hashOfConfig":"24"},{"size":1971,"mtime":1691582915595,"results":"37","hashOfConfig":"24"},{"size":1693,"mtime":1691405917348,"results":"38","hashOfConfig":"24"},{"size":565,"mtime":1691487795690,"results":"39","hashOfConfig":"24"},{"size":580,"mtime":1691448523454,"results":"40","hashOfConfig":"24"},{"size":6004,"mtime":1691490623340,"results":"41","hashOfConfig":"24"},{"size":320,"mtime":1691449010541,"results":"42","hashOfConfig":"24"},{"size":301,"mtime":1691405917350,"results":"43","hashOfConfig":"24"},{"size":619,"mtime":1677343324295,"results":"44","hashOfConfig":"24"},{"size":591,"mtime":1691410323780,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1co6832",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\index.js",[],["95","96"],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\App.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\context\\context.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\styles.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\context\\contextReducer.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\index.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\InfoCard.jsx",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\Main.jsx",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Snackbar\\Snackbar.jsx",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Details\\Details.jsx",["97"],"import React from 'react';\r\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport useStyles from './styles';\r\nimport useTransactions from '../../useTransactions';\r\n\r\nconst DetailsCard = ({ title, subheader }) => {\r\n  const { total, chartData } = useTransactions(title);\r\n  const classes = useStyles();\r\n  const options = {\r\n    legend: {\r\n      labels: {\r\n        fontColor: \"white\", // Set the font color of the legend labels\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n      {/* <CardHeader title={title} subheader={subheader} /> */}\r\n      <CardContent>\r\n        <Typography variant=\"h6\">{title}</Typography>\r\n        <Typography variant=\"h5\" className={classes.total}>\r\n          ${total}\r\n        </Typography>\r\n        <Doughnut data={chartData} options={options} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DetailsCard;\r\n","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Snackbar\\styles.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\useTransactions.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Details\\styles.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\List\\List.jsx",["98","99","100","101","102","103"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  List as MUIList,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\r\n\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport useStyles from \"./styles\";\r\nimport { useUser } from \"../../../context/userContext\";\r\nimport { onValue, ref } from \"firebase/database\";\r\nimport { db } from \"../../../config/firebase\";\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const { transactions, deleteTransaction } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <MUIList dense={false} className={classes.list}>\r\n      {transactions.map((transaction) => (\r\n        <Slide\r\n          direction=\"down\"\r\n          in\r\n          mountOnEnter\r\n          unmountOnExit\r\n          key={transaction.id}\r\n        >\r\n          <ListItem className={classes.listItem}>\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                className={\r\n                  transaction.type === \"Income\"\r\n                    ? classes.avatarIncome\r\n                    : classes.avatarExpense\r\n                }\r\n              >\r\n                <MoneyOff />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={transaction.category}\r\n              secondary={`$${transaction.amount} - ${transaction.date}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                className={classes.iconButton}\r\n                edge=\"end\"\r\n                aria-label=\"delete\"\r\n                onClick={() => deleteTransaction(transaction.id)}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n    </MUIList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\constants\\categories.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\List\\styles.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\styles.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\Form\\Form.jsx",["104"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\nimport { useUser } from \"../../../context/userContext\";\r\nimport { child, push, ref } from \"firebase/database\";\r\nimport { db } from \"../../../config/firebase\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { user } = useUser();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: \"Income\" });\r\n    } else if (\r\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\r\n    ) {\r\n      setFormData({ ...formData, type: \"Expense\" });\r\n    }\r\n\r\n    setOpen(true);\r\n    const newData = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    if (user) {\r\n      const userRef = ref(db, user.uid);\r\n      const transactionsChild = child(userRef, \"transactions\");\r\n      push(transactionsChild, newData);\r\n    } else addTransaction(newData);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            // variant=\"outlined\"\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\components\\Main\\Form\\styles.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\utils\\formatDate.js",["105"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\context\\userContext.js",[],"E:\\Projects\\Fiverr Projects\\uzairshaikh146_Uzair_India\\speechly-react\\src\\config\\firebase.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"114","line":1,"column":29,"nodeType":"112","messageId":"113","endLine":1,"endColumn":38},{"ruleId":"110","severity":1,"message":"115","line":1,"column":40,"nodeType":"112","messageId":"113","endLine":1,"endColumn":48},{"ruleId":"110","severity":1,"message":"116","line":16,"column":10,"nodeType":"112","messageId":"113","endLine":16,"endColumn":17},{"ruleId":"110","severity":1,"message":"117","line":17,"column":10,"nodeType":"112","messageId":"113","endLine":17,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":17,"column":19,"nodeType":"112","messageId":"113","endLine":17,"endColumn":22},{"ruleId":"110","severity":1,"message":"119","line":18,"column":10,"nodeType":"112","messageId":"113","endLine":18,"endColumn":12},{"ruleId":"120","severity":1,"message":"121","line":110,"column":6,"nodeType":"122","endLine":110,"endColumn":15,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":11,"endColumn":3},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useUser' is defined but never used.","'onValue' is defined but never used.","'ref' is defined but never used.","'db' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["129"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"132","text":"133"},[3609,3618],"[createTransaction, formData, segment]"]